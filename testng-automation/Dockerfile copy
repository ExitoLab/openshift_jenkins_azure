# ====== BUILD STAGE ======
FROM maven:eclipse-temurin AS build

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget unzip curl git gnupg ca-certificates fonts-liberation \
    libnss3 libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 \
    libxrandr2 libasound2t64 libatk1.0-0 libatk-bridge2.0-0 \
    libgbm1 libgtk-3-0 libpango-1.0-0 libpangocairo-1.0-0 \
    libxss1 libxtst6 lsb-release xdg-utils xvfb \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for build and test stages
RUN groupadd -g 10000 selenium || true && \
    useradd -u 10000 -g 10000 -s /bin/bash -m selenium || true

# # Install Google Chrome
# RUN curl -fsSL https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /etc/apt/keyrings/google-chrome.gpg \
#     && echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" \
#        > /etc/apt/sources.list.d/google-chrome.list \
#     && apt-get update && apt-get install -y --no-install-recommends google-chrome-stable \
#     && rm -rf /var/lib/apt/lists/*

# # Install ChromeDriver (match Chrome version)
# ENV CHROMEDRIVER_VERSION=124.0.6367.91
# RUN wget --no-hsts -q "https://storage.googleapis.com/chrome-for-testing-public/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip" \
#     && unzip chromedriver-linux64.zip \
#     && mv chromedriver-linux64/chromedriver /usr/local/bin/ \
#     && chmod +x /usr/local/bin/chromedriver \
#     && chown selenium:selenium /usr/local/bin/chromedriver \
#     && rm -rf chromedriver-linux64.zip chromedriver-linux64

# Install Google Chrome
RUN curl -fsSL https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /etc/apt/keyrings/google-chrome.gpg \
    && echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" \
       > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update && apt-get install -y --no-install-recommends google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Get Chrome version and set ChromeDriver to match
RUN CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+\.\d+') \
    && echo "Chrome version: $CHROME_VERSION" \
    && wget --no-hsts -q "https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chromedriver-linux64.zip" \
    && unzip chromedriver-linux64.zip \
    && mv chromedriver-linux64/chromedriver /usr/local/bin/ \
    && chmod +x /usr/local/bin/chromedriver \
    && chown selenium:selenium /usr/local/bin/chromedriver \
    && rm -rf chromedriver-linux64.zip chromedriver-linux64

# Install Microsoft Edge
RUN curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o /etc/apt/keyrings/microsoft-edge.gpg \
    && echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/microsoft-edge.gpg] https://packages.microsoft.com/repos/edge stable main" \
       > /etc/apt/sources.list.d/microsoft-edge.list \
    && apt-get update && apt-get install -y --no-install-recommends microsoft-edge-stable \
    && rm -rf /var/lib/apt/lists/*

# Install EdgeDriver (match Edge version)
ENV EDGEDRIVER_VERSION=124.0.2478.80
RUN wget --no-hsts -q "https://msedgedriver.azureedge.net/${EDGEDRIVER_VERSION}/edgedriver_linux64.zip" \
    && unzip edgedriver_linux64.zip \
    && mv msedgedriver /usr/local/bin/ \
    && chmod +x /usr/local/bin/msedgedriver \
    && chown selenium:selenium /usr/local/bin/msedgedriver \
    && rm -rf edgedriver_linux64.zip

# Install Selenium Server
RUN mkdir -p /opt/selenium \
    && chown selenium:selenium /opt/selenium \
    && wget --no-hsts -q https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.20.0/selenium-server-4.20.0.jar \
    -O /opt/selenium/selenium-server.jar \
    && chown selenium:selenium /opt/selenium/selenium-server.jar

# Build project
WORKDIR /app
COPY pom.xml .
RUN mvn dependency:go-offline -B
COPY src ./src
COPY testng.xml .
RUN mvn clean package -DskipTests -B
RUN chown -R selenium:selenium /app

# ====== TEST STAGE ======
FROM maven:eclipse-temurin

# Copy binaries and files from build stage
COPY --from=build /usr/local/bin/chromedriver /usr/local/bin/chromedriver
COPY --from=build /usr/local/bin/msedgedriver /usr/local/bin/msedgedriver
COPY --from=build /usr/bin/google-chrome /usr/bin/google-chrome
COPY --from=build /usr/bin/microsoft-edge /usr/bin/microsoft-edge
COPY --from=build /opt/selenium /opt/selenium
COPY --from=build /app/target /app/target
COPY --from=build /app/src /app/src
COPY --from=build /app/pom.xml /app/pom.xml
COPY --from=build /app/testng.xml /app/testng.xml

# Install minimal dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    fonts-liberation libnss3 libxss1 libatk-bridge2.0-0 libgtk-3-0 xvfb \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user before setting permissions
RUN groupadd -g 10000 selenium || true && \
    useradd -u 10000 -g 10000 -s /bin/bash -m selenium || true

# Set permissions
RUN chmod +x /usr/bin/google-chrome /usr/local/bin/chromedriver /usr/bin/microsoft-edge /usr/local/bin/msedgedriver
RUN chown selenium:selenium /usr/bin/google-chrome /usr/local/bin/chromedriver /usr/bin/microsoft-edge /usr/local/bin/msedgedriver

# Environment variables
ENV CHROME_BIN=/usr/bin/google-chrome
ENV EDGE_BIN=/usr/bin/microsoft-edge
ENV DISPLAY=:99

# Create output directory and set permissions
RUN mkdir -p /app/test-output/screenshots && \
    chown -R selenium:selenium /app

WORKDIR /app
USER selenium

COPY --chown=selenium:selenium entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]